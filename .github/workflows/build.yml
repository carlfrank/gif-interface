name: Build

on: 
  workflow_dispatch:
  push:
    branches: [ main, develop ]
    tags:
    - '*'
  pull_request:
    branches: [ main, develop ]

jobs:
  have-contracts-changed:
    name: Check if smart contracts/tests/scripts have changed
    runs-on: ubuntu-latest
    outputs:
      contracts-changed: ${{ steps.changed-files-contracts.outputs.any_changed == 'true' }}
      scripts-changed: ${{ steps.changed-files-scripts.outputs.any_changed == 'true' }}
      tests-changed: ${{ steps.changed-files-tests.outputs.any_changed == 'true' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - name: Get changed files in the contracts folder
        id: changed-files-contracts
        uses: tj-actions/changed-files@v32
        with:
          files: |
            contracts/**
      - name: Get changed files in the scripts folder
        id: changed-files-scripts
        uses: tj-actions/changed-files@v32
        with:
          files: |
            scripts/**
      - name: Get changed files in the tests folder
        id: changed-files-tests
        uses: tj-actions/changed-files@v32
        with:
          files: |
            tests/**

  compile:
    name: Compile contracts
    needs: [have-contracts-changed]
    # only run if tests successfull and contracts have changed
    if: ${{ needs.have-contracts-changed.outputs.contracts-changed == 'true' || needs.have-contracts-changed.outputs.tests-changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Setup node environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Prepare environment
        run: .github/workflows/scripts/prepare_environment.sh

      - name: Compile contracts
        run: brownie compile --all

      - name: Install solhint linter
        run: npm install --global solhint

      - name: Run solhint linter
        run: solhint contracts/**/*.sol

      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: contracts
          path: |
            build


  publish:
    name: Publish package to npmjs
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' && contains(join(needs.*.result, ','), 'success') && needs.have-contracts-changed.outputs.contracts-changed == 'true' }}
    needs: [compile]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: contracts
          path: build

      - name: Setup node environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      
      - run: npm ci

      - name: Set build version identifier
        run: npm version "`npm version patch --no-git-tag-version`-`git rev-parse --short HEAD`" --no-git-tag-version

      - run: npm publish --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}
